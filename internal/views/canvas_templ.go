// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func CanvasPage(roomID string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"absolute top-2.5 left-2.5 bg-black/70 py-2 px-3 rounded-md text-sm flex items-center gap-2 z-10\"><a href=\"/\" class=\"text-blue-400 no-underline font-medium hover:text-blue-300\">&larr; Lobby</a> <span class=\"text-gray-400\">|</span> <span>Room: <span class=\"font-semibold text-white\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(roomID)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/views/canvas.templ`, Line: 10, Col: 51}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</span></span></div><div class=\"absolute top-44 right-5 z-10 flex flex-col gap-2\"><div tabindex=\"0\" class=\"relative group w-14 h-14 bg-white rounded-full shadow-lg p-2 flex items-center justify-center transition-all duration-200 ease-in-out\"><input type=\"radio\" name=\"tool\" id=\"tool-pan\" value=\"pan\" class=\"peer/pan sr-only\"> <svg class=\"w-8 h-8 fill-black transition-transform group-hover:rotate-45\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19.4 12.9c.1-1.2-.3-2.5-1.1-3.4l-1.4-1.4c-.4-.4-.8-.7-1.3-.9-1-.4-2.1-.5-3.2-.2l-2.1.5c-1.2.3-2.3 1-3.1 2l-1.4 1.4c-.8.9-1.2 2.1-1.1 3.4.1 1.2.3 2.5 1.1 3.4l1.4 1.4c.4.4.8.7 1.3.9 1 .4 2.1.5 3.2.2l2.1-.5c1.2-.3 2.3-1 3.1-2l1.4-1.4c.8-.9 1.2-2.1 1.1-3.4zm-2.2 2.2l-1.4 1.4c-.6.6-1.4 1-2.2 1.2l-2.1.5c-.8.2-1.6.1-2.4-.2-.5-.2-.9-.4-1.3-.8l-1.4-1.4c-.6-.6-1-1.4-1.2-2.2l-.2-2.1c-.2-.8-.1-1.6.2-2.4.2-.5.4-.9.8-1.3l1.4-1.4c.6-.6 1.4-1 2.2-1.2l2.1-.5c.8-.2 1.6-.1 2.4.2.5.2.9.4 1.3.8l1.4 1.4c.6.6 1 1.4 1.2 2.2l.2 2.1c.2.8.1 1.6-.2 2.4-.2.5-.4.9-.8 1.3zM12 16c2.2 0 4-1.8 4-4s-1.8-4-4-4-4 1.8-4 4 1.8 4 4 4z\"></path></svg><div class=\"absolute top-1/2 -translate-y-1/2 right-full mr-3 w-max flex flex-col items-center gap-3 opacity-0 scale-90 invisible group-hover:opacity-100 group-hover:scale-100 group-hover:visible group-focus-within:opacity-100 group-focus-within:scale-100 group-focus-within:visible transition-all duration-200 ease-in-out\"><button id=\"redo-button\" title=\"Redo\" class=\"w-12 h-12 bg-white rounded-full shadow-lg flex items-center justify-center transition-all hover:scale-110\"><svg class=\"w-6 h-6 fill-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12.5 8.44c1.85 0 3.55.7 4.8 1.82l-1.6 1.6C14.7 10.7 13.09 10 11.5 10c-3.04 0-5.5 2.46-5.5 5.5s2.46 5.5 5.5 5.5c2.28 0 4.22-1.4 5.04-3.4l1.46.6C17.02 20.3 14.47 22 11.5 22C6.8 22 3 18.2 3 13.5S6.8 5 11.5 5c1.61 0 3.1.48 4.32 1.25L14 4.44V10h5.56l-1.92-1.92C16.05 9.17 14.44 8.44 12.5 8.44z\"></path></svg></button> <button id=\"undo-button\" title=\"Undo\" class=\"w-12 h-12 bg-white rounded-full shadow-lg flex items-center justify-center transition-all hover:scale-110\"><svg class=\"w-6 h-6 fill-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.4 10.6C16.55 9.17 14.15 8.44 12 8.44c-3.13 0-5.87 1.34-7.8 3.38L2 9.62v6h6l-2.35-2.35C7.05 11.9 9.35 10.44 12 10.44c1.85 0 3.55.7 4.8 1.82L18.4 10.6z\"></path></svg></button> <button id=\"zoom-out-button\" title=\"Zoom Out\" class=\"w-12 h-12 bg-white rounded-full shadow-lg flex items-center justify-center transition-all hover:scale-110\"><svg class=\"w-6 h-6 fill-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 13H5v-2h14v2z\"></path></svg></button> <button id=\"zoom-in-button\" title=\"Zoom In\" class=\"w-12 h-12 bg-white rounded-full shadow-lg flex items-center justify-center transition-all hover:scale-110\"><svg class=\"w-6 h-6 fill-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path></svg></button> <label for=\"tool-pan\" title=\"Pan\" class=\"w-12 h-12 bg-white rounded-full shadow-lg flex items-center justify-center cursor-pointer transition-all hover:scale-110 peer-checked/pan:ring-4 peer-checked/pan:ring-blue-500\"><svg class=\"w-6 h-6 fill-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.67 12.33 2 11.5 2S10 2.67 10 3.5V5H6c-1.1 0-2 .9-2 2v4H2.5C1.67 9 1 9.67 1 10.5S1.67 12 2.5 12H4v4c0 1.1.9 2 2 2h4v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V18h4c1.1 0 2-.9 2-2v-4h1.5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5zM17 16H7V7h10v9z\"></path></svg></label></div></div></div><div class=\"absolute bottom-5 left-5 z-10 flex flex-col gap-2\"><div class=\"flex flex-row gap-2\"><div tabindex=\"0\" class=\"relative group w-[90px] h-[90px] bg-white rounded-tl-[90px] rounded-tr-md rounded-br-md rounded-bl-md shadow-lg p-2 flex items-center justify-center transition-all duration-200 ease-in-out\"><input type=\"radio\" name=\"tool\" id=\"tool-draw\" value=\"draw\" class=\"peer/draw sr-only\" checked> <input type=\"radio\" name=\"tool\" id=\"tool-erase\" value=\"erase\" class=\"peer/erase sr-only\"> <input type=\"radio\" name=\"tool\" id=\"tool-fill\" value=\"fill\" class=\"peer/fill sr-only\"> <svg class=\"w-12 h-12 fill-gray-700 transition-transform group-hover:rotate-45\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19.4 12.9c.1-1.2-.3-2.5-1.1-3.4l-1.4-1.4c-.4-.4-.8-.7-1.3-.9-1-.4-2.1-.5-3.2-.2l-2.1.5c-1.2.3-2.3 1-3.1 2l-1.4 1.4c-.8.9-1.2 2.1-1.1 3.4.1 1.2.3 2.5 1.1 3.4l1.4 1.4c.4.4.8.7 1.3.9 1 .4 2.1.5 3.2.2l2.1-.5c1.2-.3 2.3-1 3.1-2l1.4-1.4c.8-.9 1.2-2.1 1.1-3.4zm-2.2 2.2l-1.4 1.4c-.6.6-1.4 1-2.2 1.2l-2.1.5c-.8.2-1.6.1-2.4-.2-.5-.2-.9-.4-1.3-.8l-1.4-1.4c-.6-.6-1-1.4-1.2-2.2l-.2-2.1c-.2-.8-.1-1.6.2-2.4.2-.5.4-.9.8-1.3l1.4-1.4c.6-.6 1.4-1 2.2-1.2l2.1-.5c.8-.2 1.6-.1 2.4.2.5.2.9.4 1.3.8l1.4 1.4c.6.6 1 1.4 1.2 2.2l.2 2.1c.2.8.1 1.6-.2 2.4-.2.5-.4.9-.8 1.3zM12 16c2.2 0 4-1.8 4-4s-1.8-4-4-4-4 1.8-4 4 1.8 4 4 4z\"></path></svg><div class=\"absolute bottom-full left-1/2 -translate-x-1/2 mb-3 w-max flex flex-col items-center gap-3 opacity-0 scale-90 invisible group-hover:opacity-100 group-hover:scale-100 group-hover:visible group-focus-within:opacity-100 group-focus-within:scale-100 group-focus-within:visible transition-all duration-200 ease-in-out\"><div class=\"bg-white rounded-lg shadow-lg p-2 flex flex-col items-center\"><label for=\"size-slider\" class=\"text-xs text-gray-600\">Size: <span id=\"size-value\" class=\"font-bold\">3px</span></label> <input id=\"size-slider\" type=\"range\" min=\"1\" max=\"200\" value=\"3\" class=\"w-24 h-2 bg-transparent rounded-lg appearance-none cursor-pointer [&::-webkit-slider-runnable-track]:h-2 [&::-webkit-slider-runnable-track]:rounded-full [&::-webkit-slider-runnable-track]:bg-gray-200 [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:w-5 [&::-webkit-slider-thumb]:h-5 [&::-webkit-slider-thumb]:bg-white [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:shadow-md [&::-webkit-slider-thumb]:ring-2 [&::-webkit-slider-thumb]:ring-blue-500 [&::-webkit-slider-thumb]:-mt-1.5 [&::-webkit-slider-thumb]:transition-all [&::-webkit-slider-thumb]:hover:scale-110\"></div><label for=\"tool-erase\" title=\"Erase\" class=\"w-12 h-12 bg-white rounded-full shadow-lg flex items-center justify-center cursor-pointer transition-all hover:scale-110 peer-checked/erase:ring-4 peer-checked/erase:ring-blue-500\"><svg class=\"w-6 h-6 fill-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19.7 18.3c-.4.4-1 .4-1.4 0L12 12l-6.3 6.3c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4L10.6 12 4.3 5.7c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0L12 10.6l6.3-6.3c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L13.4 12l6.3 6.3c.4.4.4 1 0 1.4z\" opacity=\".01\"></path><path d=\"M21 5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5zM5 19V5h14v14H5z\"></path><path d=\"M16.4 14.9l-2.5-2.5-2.5 2.5c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4l2.5-2.5-2.5-2.5c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0l2.5 2.5 2.5-2.5c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L15.1 12l2.5 2.5c.4.4.4 1 0 1.4-.4.4-1 .4-1.4 0z\" opacity=\".01\"></path><path d=\"M16.9,8.1L15.5,9.5l-2.5,2.5l-2.5-2.5L9.1,8.1c-0.4-0.4-1-0.4-1.4,0s-0.4,1,0,1.4l1.4,1.4l-2.5,2.5L5.1,14.9c-0.4,0.4-0.4,1,0,1.4s1,0.4,1.4,0l1.4-1.4l2.5-2.5l2.5,2.5l1.4,1.4c0.4,0.4,1,0.4,1.4,0s0.4-1,0-1.4l-1.4-1.4l2.5-2.5l1.4-1.4c0.4-0.4,0.4-1,0-1.4S17.3,7.7,16.9,8.1z\"></path></svg></label> <label for=\"tool-draw\" title=\"Draw\" class=\"w-12 h-12 bg-white rounded-full shadow-lg flex items-center justify-center cursor-pointer transition-all hover:scale-110 peer-checked/draw:ring-4 peer-checked/draw:ring-blue-500\"><svg class=\"w-6 h-6 fill-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M14.1 9.4L12 7.3 3 16.3V19h2.7l9.1-9.1-.7-.5zM17.7 3c-.4-.4-1-.4-1.4 0L15 4.3l2.7 2.7 1.3-1.3c.4-.4.4-1 0-1.4L17.7 3zM12 8.7l2.7 2.7-9.1 9.1H3v-2.7L12 8.7zM7.6 17.6L3 12.7V15h2.3l2.3 2.3V19H5v-2.7l-2.7-2.7-1.4-1.4c-.4-.4-.4-1 0-1.4l1.3-1.3c.4-.4 1-.4 1.4 0l1.4 1.4 2.7 2.7H10v-2.3L7.7 7.7 6.4 6.4c-.4-.4-1-.4-1.4 0L3.7 7.7c-.4.4-.4 1 0 1.4l1.4 1.4L7.3 13H5v2.3l2.3 2.3L7.6 17.6z\" opacity=\".01\"></path><path d=\"M21.7 5.7l-2.4-2.4c-.4-.4-1-.4-1.4 0L16.6 4.6l2.7 2.7 1.3-1.3c.4-.4.4-1 0-1.4L21.7 5.7zM3 17.3V21h3.7L17.8 9.9l-3.7-3.7L3 17.3zM14.1 9.4L12 7.3 3 16.3V19h2.7l9.1-9.1-.7-.5z\"></path></svg></label> <label for=\"tool-fill\" title=\"Fill Background\" class=\"w-12 h-12 bg-white rounded-full shadow-lg flex items-center justify-center cursor-pointer transition-all hover:scale-110 peer-checked/fill:ring-4 peer-checked/fill:ring-blue-500\"><svg class=\"w-6 h-6 fill-gray-700\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM6 5h2v2H6V5zm0 3h2v2H6V8zm0 3h2v2H6v-2zm0 3h2v2H6v-2zm3 3H6v-2h3v2zm0-3H6v-2h3v2zm0-3H6V8h3v2zm0-3H6V5h3v2zm3 3H9v-2h3v2zm0-3H9V5h3v2zm3 0h-2V5h3v2zm0 3h-2V8h3v2zm0 3h-2v-2h3v2zm0 3h-2v-2h3v2zm3 0h-2v-2h3v2zm0-3h-2v-2h3v2zm0-3h-2V8h3v2zm0-3h-2V5h3v2z\" opacity=\".01\"></path><path d=\"M17.2 6.8C16.7 6.3 16 6 15.2 6H8.8C7.2 6 6 7.2 6 8.8v6.5C6 16.2 6.8 17 7.7 17H8c.2 0 .4-.1.5-.2l1.7-1.7c.2-.2.5-.2.7 0l1.7 1.7c.1.1.3.2.5.2h.3c.9 0 1.7-.8 1.7-1.7V8.8c0-.8-.3-1.5-.8-2z\" opacity=\".01\"></path><path d=\"M19 2H5C3.9 2 3 2.9 3 4v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM5 20V4h14v16H5z\"></path><path d=\"M12.2 8.7l-2.6 2.6c-.4.4-.4 1 0 1.4l2.6 2.6c.4.4 1 .4 1.4 0l2.6-2.6c.4-.4.4-1 0-1.4l-2.6-2.6c-.4-.4-1-.4-1.4 0zM17 15c0 .5-.4 1-1 1h-2v2c0 .5-.4 1-1 1s-1-.4-1-1v-2H9v2c0 .5-.4 1-1 1s-1-.4-1-1v-2H5c-.5 0-1-.4-1-1V9c0-.5.4-1 1-1h2V6c0-.5.4-1 1-1s1 .4 1 1v2h2V6c0-.5.4-1 1-1s1 .4 1 1v2h2c.5 0 1 .4 1 1v6z\" opacity=\".01\"></path><path d=\"M21.9 5.3l-2.2-2.2c-.3-.3-.7-.4-1.1-.4H5.4c-.4 0-.8.1-1.1.4L2.1 5.3c-.3.3-.4.7-.4 1.1v11.1c0 .4.1.8.4 1.1l2.2 2.2c.3.3.7.4 1.1.4h11.1c.4 0 .8-.1 1.1-.4l2.2-2.2c.3-.3.4-.7.4-1.1V6.4c0-.4-.1-.8-.4-1.1zM19 17.6L17.6 19H6.4L5 17.6V6.4L6.4 5h11.1L19 6.4v11.2z\"></path><path d=\"M17 6H3v11h14V6zm-3.8 8.3l-2.1 2.1c-.2.2-.5.2-.7 0l-2.1-2.1c-.2-.2-.2-.5 0-.7l2.1-2.1c.2-.2.5-.2.7 0l2.1 2.1c.2.2.2.5 0 .7z\" opacity=\".01\"></path><path d=\"M19 4H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H5V6h14v12z\"></path><path d=\"M12 16.5l-4-4L6.6 11.1c-.4-.4-1-.4-1.4 0s-.4 1 0 1.4l4 4c.4.4 1 .4 1.4 0l4-4c.4-.4.4-1 0-1.4s-1-.4-1.4 0L12 16.5z\" opacity=\".01\"></path><path d=\"M18.3 14.3c.4.4.4 1 0 1.4l-6 6c-.4.4-1 .4-1.4 0l-6-6c-.4-.4-.4-1 0-1.4s1-.4 1.4 0L12 19.6l5.7-5.7c.4-.4 1-.4 1.4 0z\" opacity=\".01\"></path><path d=\"M17.3 14.3l-5 5c-.4.4-1 .4-1.4 0l-5-5c-.4-.4-.4-1 0-1.4s1-.4 1.4 0l4.3 4.3 4.3-4.3c.4-.4 1-.4 1.4 0s.4 1 0 1.4z\" opacity=\".01\"></path><path d=\"M12.9 14.9L12 14l-.9.9c-.4.4-.4 1 0 1.4l.9.9.9-.9c.4-.4.4 1 0 1.4l-.9.9c-.4.4-1 .4-1.4 0l-2.2-2.2c-.4-.4-.4-1 0-1.4l2.2-2.2c.4-.4 1-.4 1.4 0l2.2 2.2c.4.4.4 1 0 1.4l-2.2 2.2c-.4.4-1 .4-1.4 0l-.9-.9-.9.9c-.4.4-1 .4-1.4 0l-2.2-2.2c-.4-.4-.4-1 0-1.4l2.2-2.2c.4-.4 1-.4 1.4 0l2.2 2.2c.4.4.4 1 0 1.4z\"></path></svg></label></div></div><div class=\"w-[90px] h-[90px] bg-white rounded-tl-md rounded-tr-[90px] rounded-br-md rounded-bl-md shadow-lg p-2 flex flex-col items-center justify-center gap-1 transition-all duration-200 ease-in-out\"><input type=\"color\" id=\"color-picker\" value=\"#000000\" title=\"Select color\" class=\"w-10 h-10 shadow-md rounded-md cursor-pointer border-none bg-transparent appearance-none [&::-webkit-color-swatch-wrapper]:p-0 [&::-webkit-color-swatch]:rounded-md [&::-webkit-color-swatch]:border-none\"></div></div><div class=\"flex flex-row gap-2\"><button id=\"reset-button\" title=\"Reset Canvas\" class=\"group w-[90px] h-[90px] bg-white rounded-tl-md rounded-tr-md rounded-br-md rounded-bl-[90px] shadow-lg flex items-center justify-center transition-all duration-200 ease-in-out hover:scale-110 hover:bg-red-600\"><svg class=\"w-10 h-10 fill-red-600 group-hover:fill-white transition-colors\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 4c-4.41 0-8 3.59-8 8s3.59 8 8 8 8-3.59 8-8-3.59-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm-1-8H9v2h2v2h2v-2h2V9h-2V7h-2v3z\" opacity=\".01\"></path><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"></path></svg></button> <button id=\"share-button\" title=\"Share Room Link\" class=\"group w-[90px] h-[90px] bg-white rounded-tl-md rounded-tr-md rounded-br-[90px] rounded-bl-md shadow-lg flex items-center justify-center transition-all duration-200 ease-in-out hover:scale-110 hover:bg-green-600\"><svg class=\"w-10 h-10 fill-green-600 group-hover:fill-white transition-colors\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 8.81C7.5 8.31 6.79 8 6 8c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3z\"></path></svg></button></div></div><div id=\"toast-notification\" class=\"absolute bottom-5 left-1/2 -translate-x-1/2 bg-green-500 text-white py-2 px-4 rounded-lg opacity-0 transition-opacity duration-300 z-20\">Room link copied to clipboard!</div><canvas id=\"drawCanvas\" class=\"block bg-transparent cursor-crosshair\"></canvas><script>\n\t\t\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n\t\t\t\tconst canvas = document.getElementById(\"drawCanvas\");\n\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\tlet isDrawing = false;\n\t\t\t\tlet isMousePanning = false;\n\t\t\t\tlet isTouchPanning = false;\n\t\t\t\tlet lastX = 0;\n\t\t\t\tlet lastY = 0;\n\n\t\t\t\tlet drawHistory = [];\n\t\t\t\tlet redoHistory = [];\n\t\t\t\tlet currentStrokeId = 0;\n\t\t\t\tlet myClientID = \"\";\n\n\t\t\t\tlet backgroundColor = '#FFFFFF';\n\n\t\t\t\tlet transform = {\n\t\t\t\t\tpanX: 0,\n\t\t\t\t\tpanY: 0,\n\t\t\t\t\tscale: 1,\n\t\t\t\t};\n\n\t\t\t\tlet mousePanStart = { x: 0, y: 0 };\n\t\t\t\tlet touchPanStart = { x: 0, y: 0 };\n\t\t\t\tlet lastPinchDist = 0;\n\n\t\t\t\tlet currentTool = 'draw';\n\t\t\t\tlet currentColor = '#000000';\n\t\t\t\tlet currentWidth = 3;\n\n\t\t\t\tconst roomID = ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var4, templ_7745c5c3_Err := templruntime.ScriptContentOutsideStringLiteral(roomID)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/views/canvas.templ`, Line: 146, Col: 28}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var4)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, ";\n\t\t\t\tconst proto = window.location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n\t\t\t\tconst wsURL = `${proto}//${window.location.host}/ws/${roomID}`;\n\t\t\t\tconst ws = new WebSocket(wsURL);\n\n\t\t\t\tws.onopen = () => console.log(`WebSocket connection established for room: ${roomID}`);\n\t\t\t\tws.onclose = () => console.log(\"WebSocket connection closed\");\n\t\t\t\tws.onerror = (err) => console.error(\"WebSocket error: \", err);\n\n\t\t\t\tws.onmessage = (event) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst data = JSON.parse(event.data);\n\n\t\t\t\t\t\tif (data.type === 'welcome') {\n\t\t\t\t\t\t\tmyClientID = data.clientID;\n\t\t\t\t\t\t\tconsole.log('My client ID:', myClientID);\n\t\t\t\t\t\t} else if (data.type === 'history') {\n\t\t\t\t\t\t\tconsole.log('Received history:', data.lines.length, 'lines');\n\t\t\t\t\t\t\tdrawHistory = data.lines;\n\t\t\t\t\t\t\tredoHistory = [];\n\t\t\t\t\t\t\tredrawCanvas();\n\t\t\t\t\t\t} else if (data.type === 'draw') {\n\t\t\t\t\t\t\tprocessDraw(data, false);\n\t\t\t\t\t\t} else if (data.type === 'fill') {\n\t\t\t\t\t\t\tprocessFill(data, false);\n\t\t\t\t\t\t} else if (data.type === 'reset') {\n\t\t\t\t\t\t\tconsole.log('Received reset message');\n\t\t\t\t\t\t\tdrawHistory = [];\n\t\t\t\t\t\t\tredoHistory = [];\n\t\t\t\t\t\t\tbackgroundColor = '#FFFFFF';\n\t\t\t\t\t\t\tredrawCanvas();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(\"Failed to parse message or draw:\", err);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction setCanvasSize() {\n\t\t\t\t\tcanvas.width = window.innerWidth;\n\t\t\t\t\tcanvas.height = window.innerHeight;\n\t\t\t\t\tctx.lineCap = \"round\";\n\t\t\t\t\tctx.lineJoin = \"round\";\n\t\t\t\t\tredrawCanvas();\n\t\t\t\t}\n\n\t\t\t\tsetCanvasSize();\n\t\t\t\twindow.addEventListener(\"resize\", setCanvasSize);\n\t\t\t\twindow.addEventListener(\"orientationchange\", setCanvasSize);\n\n\t\t\t\tfunction redrawCanvas() {\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\t\t\t\tlet currentBg = '#FFFFFF';\n\t\t\t\t\tconst linesByStyle = new Map();\n\n\t\t\t\t\tfor (const item of drawHistory) {\n\t\t\t\t\t\tif (item.type === 'fill') {\n\t\t\t\t\t\t\tcurrentBg = item.color;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst styleKey = `${item.color || \"#000000\"}:${item.width || 3}`;\n\t\t\t\t\t\t\tif (!linesByStyle.has(styleKey)) {\n\t\t\t\t\t\t\t\tlinesByStyle.set(styleKey, []);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlinesByStyle.get(styleKey).push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbackgroundColor = currentBg;\n\n\t\t\t\t\tctx.fillStyle = backgroundColor;\n\t\t\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\n\t\t\t\t\tctx.translate(transform.panX, transform.panY);\n\t\t\t\t\tctx.scale(transform.scale, transform.scale);\n\n\t\t\t\t\tfor (const [styleKey, lines] of linesByStyle.entries()) {\n\t\t\t\t\t\tconst [color, width] = styleKey.split(':');\n\n\t\t\t\t\t\tctx.strokeStyle = color;\n\t\t\t\t\t\tctx.lineWidth = parseFloat(width);\n\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tfor (const line of lines) {\n\t\t\t\t\t\t\tctx.moveTo(line.x0, line.y0);\n\t\t\t\t\t\t\tctx.lineTo(line.x1, line.y1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.restore();\n\t\t\t\t}\n\n\t\t\t\tfunction processDraw(lineData, isLocal) {\n\t\t\t\t\tdrawHistory.push(lineData);\n\t\t\t\t\tredrawCanvas();\n\t\t\t\t\tif (isLocal && ws.readyState === WebSocket.OPEN) {\n\t\t\t\t\t\tws.send(JSON.stringify(lineData));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction processFill(fillData, isLocal) {\n\t\t\t\t\tdrawHistory.push(fillData);\n\t\t\t\t\tbackgroundColor = fillData.color;\n\t\t\t\t\tredrawCanvas();\n\t\t\t\t\tif (isLocal && ws.readyState === WebSocket.OPEN) {\n\t\t\t\t\t\tws.send(JSON.stringify(fillData));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction getEventCoords(e) {\n\t\t\t\t\tconst rect = canvas.getBoundingClientRect();\n\t\t\t\t\tif (e.touches && e.touches.length > 0) {\n\t\t\t\t\t\treturn [e.touches[0].clientX - rect.left, e.touches[0].clientY - rect.top];\n\t\t\t\t\t}\n\t\t\t\t\treturn [e.offsetX, e.offsetY];\n\t\t\t\t}\n\n\t\t\t\tfunction elementToCanvasCoords(x, y) {\n\t\t\t\t\tconst canvasX = (x - transform.panX) / transform.scale;\n\t\t\t\t\tconst canvasY = (y - transform.panY) / transform.scale;\n\t\t\t\t\treturn [canvasX, canvasY];\n\t\t\t\t}\n\n\t\t\t\tfunction getCanvasCoords(e) {\n\t\t\t\t\tconst [elementX, elementY] = getEventCoords(e);\n\t\t\t\t\treturn elementToCanvasCoords(elementX, elementY);\n\t\t\t\t}\n\n\t\t\t\tfunction getTouchMidpoint(e) {\n\t\t\t\t\tconst rect = canvas.getBoundingClientRect();\n\t\t\t\t\tif (e.touches.length === 1) {\n\t\t\t\t\t\treturn { x: e.touches[0].clientX - rect.left, y: e.touches[0].clientY - rect.top };\n\t\t\t\t\t} else if (e.touches.length === 2) {\n\t\t\t\t\t\tconst [t1, t2] = [e.touches[0], e.touches[1]];\n\t\t\t\t\t\treturn { x: ((t1.clientX + t2.clientX) / 2) - rect.left, y: ((t1.clientY + t2.clientY) / 2) - rect.top };\n\t\t\t\t\t}\n\t\t\t\t\treturn { x: 0, y: 0 };\n\t\t\t\t}\n\n\t\t\t\tfunction getPinchDist(e) {\n\t\t\t\t\tconst [t1, t2] = [e.touches[0], e.touches[1]];\n\t\t\t\t\tconst dx = t1.clientX - t2.clientX;\n\t\t\t\t\tconst dy = t1.clientY - t2.clientY;\n\t\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t}\n\n\t\t\t\tfunction zoomAtPoint(scaleDelta, pointX, pointY) {\n\t\t\t\t\tconst [worldX, worldY] = elementToCanvasCoords(pointX, pointY);\n\t\t\t\t\tconst newScale = Math.max(0.1, Math.min(transform.scale * scaleDelta, 20));\n\t\t\t\t\ttransform.panX += (worldX * transform.scale - worldX * newScale) + (pointX - transform.panX) * (1 - scaleDelta);\n\t\t\t\t\ttransform.panY += (worldY * transform.scale - worldY * newScale) + (pointY - transform.panY) * (1 - scaleDelta);\n\t\t\t\t\ttransform.scale = newScale;\n\t\t\t\t\tredrawCanvas();\n\t\t\t\t}\n\n\t\t\t\tfunction undoLast() {\n\t\t\t\t\tif (drawHistory.length === 0 || !myClientID) return;\n\n\t\t\t\t\tlet lastMyStrokeId = 0;\n\t\t\t\t\tlet lastMyItemType = '';\n\n\t\t\t\t\tfor (let i = drawHistory.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (drawHistory[i].clientID === myClientID) {\n\t\t\t\t\t\t\tlastMyStrokeId = drawHistory[i].strokeId;\n\t\t\t\t\t\t\tlastMyItemType = drawHistory[i].type;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastMyStrokeId === 0) return;\n\n\t\t\t\t\tconst strokeToUndo = [];\n\t\t\t\t\tconst newDrawHistory = [];\n\n\t\t\t\t\tfor (const item of drawHistory) {\n\t\t\t\t\t\tif (item.strokeId === lastMyStrokeId) {\n\t\t\t\t\t\t\tstrokeToUndo.push(item);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewDrawHistory.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawHistory = newDrawHistory;\n\t\t\t\t\tredoHistory.push(strokeToUndo);\n\n\t\t\t\t\tredrawCanvas();\n\t\t\t\t}\n\n\t\t\t\tfunction redoLast() {\n\t\t\t\t\tif (redoHistory.length === 0 || !myClientID) return;\n\n\t\t\t\t\tconst strokeToRedo = redoHistory.pop();\n\t\t\t\t\tif (!strokeToRedo || strokeToRedo.length === 0) return;\n\n\t\t\t\t\tif (strokeToRedo[0].clientID !== myClientID) {\n\t\t\t\t\t\tconsole.error(\"Redo history corrupted.\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const item of strokeToRedo) {\n\t\t\t\t\t\tdrawHistory.push(item);\n\t\t\t\t\t}\n\n\t\t\t\t\tredrawCanvas();\n\t\t\t\t}\n\n\n\t\t\t\tfunction startMouseDrawing(e) {\n\t\t\t\t\tconst toolbars = document.querySelectorAll('.relative.group');\n\t\t\t\t\ttoolbars.forEach(toolbar => {\n\t\t\t\t\t\ttoolbar.blur();\n\t\t\t\t\t});\n\n\t\t\t\t\tif (e.button !== 0) return;\n\n\t\t\t\t\tif (currentTool === 'fill') {\n\t\t\t\t\t\tconst strokeId = Date.now();\n\t\t\t\t\t\tconst fillData = {\n\t\t\t\t\t\t\ttype: 'fill',\n\t\t\t\t\t\t\tcolor: currentColor,\n\t\t\t\t\t\t\tstrokeId: strokeId,\n\t\t\t\t\t\t\tclientID: myClientID\n\t\t\t\t\t\t};\n\t\t\t\t\t\tredoHistory = [];\n\t\t\t\t\t\tprocessFill(fillData, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentTool === 'pan') {\n\t\t\t\t\t\tisMousePanning = true;\n\t\t\t\t\t\tmousePanStart = { x: e.clientX, y: e.clientY };\n\t\t\t\t\t\tcanvas.classList.add('cursor-grabbing');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisDrawing = true;\n\t\t\t\t\t\t[lastX, lastY] = getCanvasCoords(e);\n\t\t\t\t\t\tcurrentStrokeId = Date.now();\n\t\t\t\t\t\tredoHistory = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction moveMouseDrawing(e) {\n\t\t\t\t\tif (isMousePanning && currentTool === 'pan') {\n\t\t\t\t\t\tconst deltaX = e.clientX - mousePanStart.x;\n\t\t\t\t\t\tconst deltaY = e.clientY - mousePanStart.y;\n\t\t\t\t\t\ttransform.panX += deltaX;\n\t\t\t\t\t\ttransform.panY += deltaY;\n\t\t\t\t\t\tmousePanStart = { x: e.clientX, y: e.clientY };\n\t\t\t\t\t\tredrawCanvas();\n\t\t\t\t\t} else if (isDrawing && (currentTool === 'draw' || currentTool === 'erase')) {\n\t\t\t\t\t\tconst [newX, newY] = getCanvasCoords(e);\n\t\t\t\t\t\tconst color = (currentTool === 'erase') ? backgroundColor : currentColor;\n\t\t\t\t\t\tconst lineData = {\n\t\t\t\t\t\t\ttype: 'draw',\n\t\t\t\t\t\t\tx0: lastX, y0: lastY, x1: newX, y1: newY,\n\t\t\t\t\t\t\tcolor: color, width: currentWidth,\n\t\t\t\t\t\t\tstrokeId: currentStrokeId, clientID: myClientID\n\t\t\t\t\t\t};\n\t\t\t\t\t\tprocessDraw(lineData, true);\n\t\t\t\t\t\t[lastX, lastY] = [newX, newY];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction stopMouseDrawing() {\n\t\t\t\t\tisDrawing = false;\n\t\t\t\t\tisMousePanning = false;\n\t\t\t\t}\n\n\t\t\t\tfunction handleTouchStart(e) {\n\t\t\t\t\tconst toolbars = document.querySelectorAll('.relative.group');\n\t\t\t\t\ttoolbars.forEach(toolbar => {\n\t\t\t\t\t\ttoolbar.blur();\n\t\t\t\t\t});\n\n\t\t\t\t\tif (e.touches.length === 1) {\n\n\t\t\t\t\t\tif (currentTool === 'fill') {\n\t\t\t\t\t\t\tconst strokeId = Date.now();\n\t\t\t\t\t\t\tconst fillData = {\n\t\t\t\t\t\t\t\ttype: 'fill',\n\t\t\t\t\t\t\t\tcolor: currentColor,\n\t\t\t\t\t\t\t\tstrokeId: strokeId,\n\t\t\t\t\t\t\t\tclientID: myClientID\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tredoHistory = [];\n\t\t\t\t\t\t\tprocessFill(fillData, true);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (currentTool === 'pan') {\n\t\t\t\t\t\t\tisDrawing = false;\n\t\t\t\t\t\t\tisTouchPanning = true;\n\t\t\t\t\t\t\ttouchPanStart = getTouchMidpoint(e);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tisDrawing = true;\n\t\t\t\t\t\t\tisTouchPanning = false;\n\t\t\t\t\t\t\t[lastX, lastY] = getCanvasCoords(e);\n\t\t\t\t\t\t\tcurrentStrokeId = Date.now();\n\t\t\t\t\t\t\tredoHistory = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (e.touches.length === 2) {\n\t\t\t\t\t\tisDrawing = false;\n\t\t\t\t\t\tisTouchPanning = false;\n\t\t\t\t\t\tlastPinchDist = getPinchDist(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction handleTouchMove(e) {\n\t\t\t\t\tif (isDrawing && e.touches.length === 1 && (currentTool === 'draw' || currentTool === 'erase')) {\n\t\t\t\t\t\tconst [newX, newY] = getCanvasCoords(e);\n\t\t\t\t\t\tconst color = (currentTool === 'erase') ? backgroundColor : currentColor;\n\t\t\t\t\t\tconst lineData = {\n\t\t\t\t\t\t\ttype: 'draw',\n\t\t\t\t\t\t\tx0: lastX, y0: lastY, x1: newX, y1: newY,\n\t\t\t\t\t\t\tcolor: color, width: currentWidth,\n\t\t\t\t\t\t\tstrokeId: currentStrokeId, clientID: myClientID\n\t\t\t\t\t\t};\n\t\t\t\t\t\tprocessDraw(lineData, true);\n\t\t\t\t\t\t[lastX, lastY] = [newX, newY];\n\t\t\t\t\t} else if (isTouchPanning && e.touches.length === 1 && currentTool === 'pan') {\n\t\t\t\t\t\tconst panNow = getTouchMidpoint(e);\n\t\t\t\t\t\tconst deltaX = panNow.x - touchPanStart.x;\n\t\t\t\t\t\tconst deltaY = panNow.y - touchPanStart.y;\n\t\t\t\t\t\ttransform.panX += deltaX;\n\t\t\t\t\t\ttransform.panY += deltaY;\n\t\t\t\t\t\ttouchPanStart = panNow;\n\t\t\t\t\t\tredrawCanvas();\n\t\t\t\t\t} else if (e.touches.length === 2) {\n\t\t\t\t\t\tconst newDist = getPinchDist(e);\n\t\t\t\t\t\tconst zoomDelta = newDist / lastPinchDist;\n\t\t\t\t\t\tconst midPoint = getTouchMidpoint(e);\n\t\t\t\t\t\tzoomAtPoint(zoomDelta, midPoint.x, midPoint.y);\n\t\t\t\t\t\tlastPinchDist = newDist;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction handleTouchEnd(e) {\n\t\t\t\t\tisDrawing = false;\n\t\t\t\t\tisTouchPanning = false;\n\t\t\t\t\tlastPinchDist = 0;\n\t\t\t\t}\n\n\t\t\t\tcanvas.addEventListener(\"mousedown\", startMouseDrawing);\n\t\t\t\tcanvas.addEventListener(\"mousemove\", moveMouseDrawing);\n\t\t\t\tcanvas.addEventListener(\"mouseup\", stopMouseDrawing);\n\t\t\t\tcanvas.addEventListener(\"mouseout\", stopMouseDrawing);\n\t\t\t\tcanvas.addEventListener(\"touchstart\", handleTouchStart, { passive: false });\n\t\t\t\tcanvas.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n\t\t\t\tcanvas.addEventListener(\"touchend\", handleTouchEnd);\n\t\t\t\tcanvas.addEventListener(\"touchcancel\", handleTouchEnd);\n\t\t\t\tcanvas.addEventListener('wheel', (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst scaleDelta = e.deltaY > 0 ? 0.9 : 1.1;\n\t\t\t\t\tzoomAtPoint(scaleDelta, e.offsetX, e.offsetY);\n\t\t\t\t}, { passive: false });\n\n\n\t\t\t\tconst toolDraw = document.getElementById('tool-draw');\n\t\t\t\tconst toolErase = document.getElementById('tool-erase');\n\t\t\t\tconst toolPan = document.getElementById('tool-pan');\n\t\t\t\tconst toolFill = document.getElementById('tool-fill');\n\t\t\t\tconst colorPicker = document.getElementById('color-picker');\n\t\t\t\tconst resetButton = document.getElementById('reset-button');\n\t\t\t\tconst shareButton = document.getElementById('share-button');\n\t\t\t\tconst toast = document.getElementById('toast-notification');\n\t\t\t\tconst sizeSlider = document.getElementById('size-slider');\n\t\t\t\tconst sizeValueDisplay = document.getElementById('size-value');\n\n\t\t\t\tcurrentWidth = sizeSlider.value;\n\t\t\t\tsizeValueDisplay.textContent = `${currentWidth}px`;\n\n\t\t\t\tconst zoomInButton = document.getElementById('zoom-in-button');\n\t\t\t\tconst zoomOutButton = document.getElementById('zoom-out-button');\n\t\t\t\tconst undoButton = document.getElementById('undo-button');\n\t\t\t\tconst redoButton = document.getElementById('redo-button');\n\n\t\t\t\tfunction setTool(tool) {\n\t\t\t\t\tcurrentTool = tool;\n\t\t\t\t\tif (tool === 'pan') {\n\t\t\t\t\t\tcanvas.classList.remove('cursor-crosshair');\n\t\t\t\t\t\tcanvas.classList.add('cursor-grab');\n\t\t\t\t\t} else if (tool === 'fill') {\n\t\t\t\t\t\tcanvas.classList.remove('cursor-grab');\n\t\t\t\t\t\tcanvas.classList.add('cursor-copy');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcanvas.classList.remove('cursor-grab');\n\t\t\t\t\t\tcanvas.classList.add('cursor-crosshair');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttoolDraw.addEventListener('change', () => setTool('draw'));\n\t\t\t\ttoolErase.addEventListener('change', () => setTool('erase'));\n\t\t\t\ttoolPan.addEventListener('change', () => setTool('pan'));\n\t\t\t\ttoolFill.addEventListener('change', () => setTool('fill'));\n\n\t\t\t\tcolorPicker.addEventListener('input', (e) => {\n\t\t\t\t\tcurrentColor = e.target.value;\n\t\t\t\t\tif (currentTool === 'pan') {\n\t\t\t\t\t\ttoolDraw.checked = true;\n\t\t\t\t\t\tsetTool('draw');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tsizeSlider.addEventListener('input', (e) => {\n\t\t\t\t\tcurrentWidth = e.target.value;\n\t\t\t\t\tsizeValueDisplay.textContent = `${currentWidth}px`;\n\t\t\t\t});\n\n\t\t\t\tzoomInButton.addEventListener('click', () => zoomAtPoint(1.2, canvas.width / 2, canvas.height / 2));\n\t\t\t\tzoomOutButton.addEventListener('click', () => zoomAtPoint(0.8, canvas.width / 2, canvas.height / 2));\n\n\t\t\t\tundoButton.addEventListener('click', undoLast);\n\t\t\t\tredoButton.addEventListener('click', redoLast);\n\n\t\t\t\tresetButton.addEventListener('click', () => {\n\t\t\t\t\tif (ws.readyState === WebSocket.OPEN) {\n\t\t\t\t\t\tws.send(JSON.stringify({ type: 'reset' }));\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tshareButton.addEventListener('click', () => {\n\t\t\t\t\tnavigator.clipboard.writeText(window.location.href).then(() => {\n\t\t\t\t\t\ttoast.innerText = \"Room link copied!\";\n\t\t\t\t\t\ttoast.classList.remove('opacity-0');\n\t\t\t\t\t\tsetTimeout(() => toast.classList.add('opacity-0'), 2000);\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\tconsole.error('Failed to copy link: ', err);\n\t\t\t\t\t\ttoast.innerText = \"Failed to copy link.\";\n\t\t\t\t\t\ttoast.classList.add('bg-red-500');\n\t\t\t\t\t\ttoast.classList.remove('opacity-0', 'bg-green-500');\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\ttoast.classList.add('opacity-0');\n\t\t\t\t\t\t\ttoast.classList.remove('bg-red-500');\n\t\t\t\t\t\t\ttoast.classList.add('bg-green-500');\n\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layout("Canvas Room: "+roomID, "m-0 p-0 overflow-hidden w-full h-screen bg-gray-900 font-sans text-gray-100").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
